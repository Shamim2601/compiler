Line 1: type_specifier : INT

int

Line 1: declaration_list : ID

x

Line 1: declaration_list : declaration_list COMMA ID

x,y

Line 1: declaration_list : declaration_list COMMA ID

x,y,z

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z;

Line 1: unit : var_declaration

int x,y,z;

Line 1: program : unit

int x,y,z;


Line 1: type_specifier : FLOAT

float

Line 1: declaration_list : ID

a

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

float a;

Line 1: unit : var_declaration

float a;

Line 1: program : program unit

int x,y,z;
float a;


Line 3: type_specifier : VOID

void

Line 3: func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON

void foo();

Line 3: unit : func_declaration

void foo();

Line 3: program : program unit

int x,y,z;
float a;
void foo();


Line 5: type_specifier : INT

int

Line 5: type_specifier : INT

int

Line 5: parameter_list : type_specifier ID

int a

Line 5: type_specifier : INT

int

Line 5: parameter_list : parameter_list COMMA type_specifier

int a,int b

Line 6: variable : ID

a

Line 6: factor	: variable

a

Line 6: unary_expression	: factor

a

Line 6: term : unary_expression

a

Line 6: simple_expression : term

a

Line 6: variable : ID

b

Line 6: factor	: variable

b

Line 6: unary_expression	: factor

b

Line 6: term : unary_expression

b

Line 6: simple_expression : simple_expression ADDOP term

a+b

Line 6: rel_expression	: simple_expression

a+b

Line 6: logic_expression : rel_expression

a+b

Line 6: expression : logic_expression

a+b

Line 6: statement : RETURN expression SEMICOLON

return a+b;

Line 6: statements : statement

return a+b;


Line 7: compound_statement : LCURL statements RCURL

{return a+b;
}

Line 7: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int var(int a,int b){
return a+b;
}


Line 7: unit : func_definition

int var(int a,int b){
return a+b;
}


Line 7: program : program unit

int x,y,z;
float a;
void foo();
int var(int a,int b){
return a+b;
}


Line 7: start : program

Total lines: 7
Total errors: 0
