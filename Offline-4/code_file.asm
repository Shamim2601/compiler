.MODEL SMALL
.STACK 400H
.DATA
NUMBER_STRING DB '00000$'
t1 DW ?
t2 DW ?
t3 DW ?
t4 DW ?

.CODE
main PROC	;func_definition
MOV AX,@DATA 
MOV DS,AX	;initializing data segment

PUSH t3
PUSH 4
POP BX	;variable ASSIGNOP logic_expression
POP AX
MOV t3, BX
PUSH t4
PUSH 6
POP BX	;variable ASSIGNOP logic_expression
POP AX
MOV t4, BX
PUSH t3
PUSH 0
POP BX	;simple_expression RELOP simple_expression
POP AX
CMP AX, BX
JLE L2
L1:
MOV BX, 1
JMP L3
L2:
MOV BX, 0
L3:
PUSH BX
L4:
POP BX	;statement : WHILE LPAREN expression RPAREN
CMP BX, 0
JE L5
PUSH t4
PUSH t4
PUSH 3
POP BX	;simple_expression ADDOP term
POP AX
ADD BX, AX
PUSH BX
POP BX	;variable ASSIGNOP logic_expression
POP AX
MOV t4, BX
PUSH t3
DEC t3	;variable DECOP
PUSH t3
JMP L4
L5:
MOV AX, t4
CALL PRINT	;PRINTLN LPAREN ID RPAREN SEMICOLON
MOV AX, t3
CALL PRINT	;PRINTLN LPAREN ID RPAREN SEMICOLON
PUSH 0	;statement : RETURN expression SEMICOLON

MOV AH, 4CH 
INT 21H		;return 0
main ENDP

PRINT PROC
CMP AX, 0
JNL NORMAL 
PUSH AX
MOV DL, 45
MOV AH, 2
INT 21H 
POP AX
NEG AX
NORMAL:
LEA SI, NUMBER_STRING
ADD SI, 5
PRINT_LOOP:
DEC SI
XOR DX, DX
MOV CX, 10
DIV CX
ADD DL, '0'
MOV [SI], DL
CMP AX, 0
JNE PRINT_LOOP
MOV DX, SI
MOV AH, 9
INT 21H
MOV AH, 2	;printing newline
MOV DL, 0DH
INT 21H
MOV DL, 0AH
INT 21H
RET
PRINT ENDP

END MAIN