Line 1: type_specifier : INT

Line 1: func_definition : type_specifier ID LPAREN RPAREN

Line 3: compound_statement : LCURL

Line 3: type_specifier : INT

Line 3: declaration_list : ID

Line 3: declaration_list : declaration_list COMMA ID

Line 3: declaration_list : declaration_list COMMA ID

Line 3: var_declaration : type_specifier declaration_list SEMICOLON

Scopetable #1.1
0 -->> < i : ID >
1 -->> < j : ID >
2 -->> < k : ID >

Scopetable #1
5 -->> < main : ID >

Line 3: statement : var_declaration

Line 3: statements : statement

Line 5: variable : ID

Line 5: factor	: CONST_INT

Line 5: unary_expression	: factor

Line 5: term : unary_expression

Line 5: simple_expression : term

Line 5: rel_expression	: simple_expression

Line 5: logic_expression : rel_expression

Line 5: expression : variable ASSIGNOP logic_expression

Line 5: expression_statement : expression SEMICOLON

Line 5: statement : expression_statement

Line 5: statements : statements statement

Line 6: variable : ID

Line 6: factor	: CONST_INT

Line 6: unary_expression	: factor

Line 6: term : unary_expression

Line 6: simple_expression : term

Line 6: rel_expression	: simple_expression

Line 6: logic_expression : rel_expression

Line 6: expression : variable ASSIGNOP logic_expression

Line 6: expression_statement : expression SEMICOLON

Line 6: statement : expression_statement

Line 6: statements : statements statement

Line 7: variable : ID

Line 7: factor	: CONST_INT

Line 7: unary_expression	: factor

Line 7: term : unary_expression

Line 7: simple_expression : term

Line 7: rel_expression	: simple_expression

Line 7: logic_expression : rel_expression

Line 7: expression : variable ASSIGNOP logic_expression

Line 7: expression_statement : expression SEMICOLON

Line 7: statement : expression_statement

Line 7: statements : statements statement

Line 10: variable : ID

Line 10: factor	: variable

Line 10: unary_expression	: factor

Line 10: term : unary_expression

Line 10: simple_expression : term

Line 10: factor	: CONST_INT

Line 10: unary_expression	: factor

Line 10: term : unary_expression

Line 10: simple_expression : term

Line 10: rel_expression : simple_expression RELOP simple_expression

Line 10: logic_expression : rel_expression

Line 10: expression : logic_expression

Line 10: if_statement : IF LPAREN expression RPAREN

Line 11: compound_statement : LCURL

Line 11: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

Line 11: statements : statement

Line 12: compound_statement : LCURL statements

Line 12: compound_statement : LCURL statements RCURL

Line 12: statement : compound_statement

Line 12: if_statement : IF LPAREN expression RPAREN statement

Line 14: statement : if_statement

Line 14: statements : statements statement

Line 14: variable : ID

Line 14: factor	: variable

Line 14: unary_expression	: factor

Line 14: term : unary_expression

Line 14: simple_expression : term

Line 14: factor	: CONST_INT

Line 14: unary_expression	: factor

Line 14: term : unary_expression

Line 14: simple_expression : term

Line 14: rel_expression : simple_expression RELOP simple_expression

Line 14: logic_expression : rel_expression

Line 14: expression : logic_expression

Line 14: if_statement : IF LPAREN expression RPAREN

Line 15: compound_statement : LCURL

Line 15: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

Line 15: statements : statement

Line 16: compound_statement : LCURL statements

Line 16: compound_statement : LCURL statements RCURL

Line 16: statement : compound_statement

Line 16: if_statement : IF LPAREN expression RPAREN statement

Line 17: statement : if_statement ELSE

Line 18: compound_statement : LCURL

Line 18: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

Line 18: statements : statement

Line 19: compound_statement : LCURL statements

Line 19: compound_statement : LCURL statements RCURL

Line 19: statement : compound_statement

Line 19: statement : if_statement ELSE statement

Line 19: statements : statements statement

Line 21: variable : ID

Line 21: factor	: variable

Line 21: unary_expression	: factor

Line 21: term : unary_expression

Line 21: simple_expression : term

Line 21: factor	: CONST_INT

Line 21: unary_expression	: factor

Line 21: term : unary_expression

Line 21: simple_expression : term

Line 21: rel_expression : simple_expression RELOP simple_expression

Line 21: logic_expression : rel_expression

Line 21: expression : logic_expression

Line 21: if_statement : IF LPAREN expression RPAREN

Line 22: compound_statement : LCURL

Line 22: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

Line 22: statements : statement

Line 23: compound_statement : LCURL statements

Line 23: compound_statement : LCURL statements RCURL

Line 23: statement : compound_statement

Line 23: if_statement : IF LPAREN expression RPAREN statement

Line 24: statement : if_statement ELSE

Line 24: variable : ID

Line 24: factor	: variable

Line 24: unary_expression	: factor

Line 24: term : unary_expression

Line 24: simple_expression : term

Line 24: factor	: CONST_INT

Line 24: unary_expression	: factor

Line 24: term : unary_expression

Line 24: simple_expression : term

Line 24: rel_expression : simple_expression RELOP simple_expression

Line 24: logic_expression : rel_expression

Line 24: expression : logic_expression

Line 24: if_statement : IF LPAREN expression RPAREN

Line 25: compound_statement : LCURL

Line 25: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

Line 25: statements : statement

Line 26: compound_statement : LCURL statements

Line 26: compound_statement : LCURL statements RCURL

Line 26: statement : compound_statement

Line 26: if_statement : IF LPAREN expression RPAREN statement

Line 27: statement : if_statement ELSE

Line 27: variable : ID

Line 27: factor	: variable

Line 27: unary_expression	: factor

Line 27: term : unary_expression

Line 27: simple_expression : term

Line 27: factor	: CONST_INT

Line 27: unary_expression	: factor

Line 27: term : unary_expression

Line 27: simple_expression : term

Line 27: rel_expression : simple_expression RELOP simple_expression

Line 27: logic_expression : rel_expression

Line 27: expression : logic_expression

Line 27: if_statement : IF LPAREN expression RPAREN

Line 28: compound_statement : LCURL

Line 28: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

Line 28: statements : statement

Line 29: compound_statement : LCURL statements

Line 29: compound_statement : LCURL statements RCURL

Line 29: statement : compound_statement

Line 29: if_statement : IF LPAREN expression RPAREN statement

Line 30: statement : if_statement ELSE

Line 31: compound_statement : LCURL

Line 31: variable : ID

Line 31: factor	: CONST_INT

Line 31: unary_expression	: factor

Line 31: term : unary_expression

Line 31: simple_expression : term

Line 31: rel_expression	: simple_expression

Line 31: logic_expression : rel_expression

Line 31: expression : variable ASSIGNOP logic_expression

Line 31: expression_statement : expression SEMICOLON

Line 31: statement : expression_statement

Line 31: statements : statement

Line 32: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

Line 32: statements : statements statement

Line 33: compound_statement : LCURL statements

Line 33: compound_statement : LCURL statements RCURL

Line 33: statement : compound_statement

Line 33: statement : if_statement ELSE statement

Line 33: statement : if_statement ELSE statement

Line 33: statement : if_statement ELSE statement

Line 33: statements : statements statement

Line 36: factor	: CONST_INT

Line 36: unary_expression	: factor

Line 36: term : unary_expression

Line 36: simple_expression : term

Line 36: rel_expression	: simple_expression

Line 36: logic_expression : rel_expression

Line 36: expression : logic_expression

Line 36: statement : RETURN expression SEMICOLON

Line 36: statements : statements statement

Line 37: compound_statement : LCURL statements

Line 37: compound_statement : LCURL statements RCURL

Line 37: func_definition : type_specifier ID LPAREN RPAREN compound_statement

Line 37: unit : func_definition

Line 37: program : unit

Line 39: start : program

Scopetable #1
5 -->> < main : ID >

Total lines: 39
Total errors: 0
